---
title: "Westport Erosion Predictions"
author: "RLionheart"
format: pdf
editor: visual
---

## Overview here

Here I can give a quick overview of my thought process and methods. An arbitrary baseline was drawn approximately 350m from shoreline. Each historical shoreline from 2006 to 2022 was measured to the baseline at three separate points, titled "north", "inflection" and "south" (see more detail below). All distance information is in meters.

## Setup

```{r}
#| echo: false
library(ggpubr)
library(tidyverse)
```

## Create data frames at each sampling position

Southern benchmark at approximately 46°53'13.57"N, 124° 7'34.81"W Chosen due to proximity to dynamic revetment constructed in 2021

```{r}
south <- data.frame(year = c("7-2006", "9-2009", "9-2011", "8-2016", "3-2020", "8-2022"),
                 distance_m = c(305.00, 308.49, 313.71, 338.23, 344.00, 348.42), 
                 position = "south")
```

Northern benchmark at approximately 46°54'6.84"N, 124° 7'54.29"W Chosen due to proximity to nourishment provided by the Army Corps of Engineers

```{r}
north <- data.frame(year = c("7-2006", "9-2009", "9-2011", "8-2016", "3-2020", "8-2022"),
                    distance_m = c(322.55, 317.65, 311.69, 309.64, 316.66, 319.76), 
                    position = "north")
```

Inflection point at approximately 46°53'49.91"N, 124° 7'48.71"W. Chosen where active erosion appears to be mitigated by Corps nourishment, *by visual inspection only*.

```{r}
inflection <- data.frame(year = c("7-2006", "9-2009", "9-2011", "8-2016", "3-2020", "8-2022"),
                         distance_m = c(328.97, 332.19, 333.04, 331.54, 335.62, 337.26), 
                         position = "inflection")
```

Combine all locations to one data frame for calculations.
```{r}
distance_to_baseline <- south %>% 
  rbind(north) %>%
  rbind(inflection)
distance_to_baseline$year <- factor(distance_to_baseline$year,
                                    levels=c("6-1990", "7-2006", "9-2009", "9-2011", "8-2016", "3-2020", "8-2022"))
distance_to_baseline$position <- factor(distance_to_baseline$position, 
                                        levels = c("north", "inflection", "south"))
```

## Create plots

Plot distance by year
```{r}
distance.plot <- ggplot(distance_to_baseline, aes(group=position, y=distance_m, x=year, color=position)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  scale_color_manual(values = c("#036C88", "#36A886", "#DBA827"), 
                     name = "Geographic location") +
  xlab("Month-Year") + 
  ylab("Distance from Basepoint (m)") +
  ggtitle("Overall Distance (m)")
```

Calculate rates of change (ROC) at each location
```{r}
ROC <- distance_to_baseline %>% 
  group_by(position) %>% 
  arrange(position, year) %>% 
  mutate(rate = 100 * (distance_m - lag(distance_m))/lag(distance_m))
```

Plot rates of change by year
```{r}
ROC.plot <- ggplot(data=ROC, aes(x=year, y=rate, group=position, color = position)) +
  geom_line(linewidth = 1) +
  geom_point(size = 2) +
  scale_color_manual(values = c("#036C88", "#36A886", "#DBA827"), 
                     name = "Geographic location") +
  xlab("Month-Year") + 
  ylab("Rate of Change (m/year)") +
  ggtitle("Rate of Change (m/year)")
```

## Combine plots
```{r}
all.plots <- ggarrange(distance.plot, ROC.plot, common.legend = TRUE, legend="right")
annotate_figure(all.plots, top = text_grob("Shoreline Erosion at Westpoint Light State Park", 
                                      color = "black", face = "bold", size = 14))
```


## Predict 15-year and 25-year erosion rate

```{r}
prediction <- distance_to_baseline %>%
  separate(year, into = c("month", "year"), sep = "-") %>%
  group_by(position) %>%
  mutate(year = as.numeric(year)) %>%
  mutate(time = max(year) - min(year),
         distance_change = distance_m[year == 2022] - distance_m[year == 2006],
         m_per_year = round(distance_change / time),
         year_15 = m_per_year * 15,
         year_25 = m_per_year * 25) %>%
  select(position:year_25) %>%
  unique()
prediction
```